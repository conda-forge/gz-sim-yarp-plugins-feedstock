# Note: we use this variable everywhere except in outputs names as jinja variables in output names are not supported
# by migrators, see https://github.com/conda-forge/librobometry-feedstock/pull/20#issuecomment-2041618340
{% set cxx_name = "libgz-sim-yarp-plugins" %}
{% set plugin_name = "gz-sim-yarp-plugins" %}
{% set name = "gz-sim-yarp-plugins-split" %}
{% set version = "0.5.0" %}
{% set build_number = 1 %}

# As ionic (gz-sim9) is newer then harmonic (gz-sim8),
# we give priority to the gz-sim9 installation
{% if GZ_DISTRO_VARIANT == "ionic" %}
{% set build_number = build_number + 200 %}
{% endif %}

package:
  # {{ name }}
  name: gz-sim-yarp-plugins-split
  version: {{ version }}

source:
  - url: https://github.com/robotology/gz-sim-yarp-plugins/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 73798074beb8abd67bb5a2ba16493032919d597dad1564078950902031c7a23b

build:
  number: 1

outputs:
  # {{ cxx_name }}
  - name: libgz-sim-yarp-plugins
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      ignore_run_exports_from:
        - gtest
      run_exports:
        # See https://github.com/robotology/gz-sim-yarp-plugins/pull/237
        - {{ pin_subpackage(cxx_name, max_pin='x.x') }}
      string: {{ GZ_DISTRO_VARIANT }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - pkg-config
        - ninja
        - multisheller
      host:
        - xorg-libxfixes  # [linux]
        - libgl-devel  # [linux]
        - libyarp
        - libabseil
        - libprotobuf
        - libgz-math7  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-math8  # [GZ_DISTRO_VARIANT == "ionic"]
        - libgz-plugin2  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-plugin3  # [GZ_DISTRO_VARIANT == "ionic"]
        - libgz-msgs10  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-msgs11  # [GZ_DISTRO_VARIANT == "ionic"]
        - libgz-transport13  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-transport14  # [GZ_DISTRO_VARIANT == "ionic"]
        - libgz-common5  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-common6  # [GZ_DISTRO_VARIANT == "ionic"]
        - libsdformat14  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libsdformat15  # [GZ_DISTRO_VARIANT == "ionic"]
        - libgz-sim8  # [GZ_DISTRO_VARIANT == "harmonic"]
        - libgz-sim9  # [GZ_DISTRO_VARIANT == "ionic"]
        - gtest
      run:

    test:
      commands:
        {% set gyp_libs = [
                "basestate-system",
                "camera-system",
                "clock-system",
                "controlboard-system",
                "forcetorque-system",
                "imu-system",
                "laser-system",
                "robotinterface-system"
        ] %}
        {% for gyp_lib in gyp_libs %}
        - test -f ${PREFIX}/lib/libgz-sim-yarp-{{ gyp_lib }}${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_BIN%\\gz-sim-yarp-{{ gyp_lib }}.dll exit 1  # [win]
        {% endfor %}

  # {{ plugin_name }}
  - name: gz-sim-yarp-plugins
    requirements:
      run:
        - {{ pin_subpackage(cxx_name, max_pin='x.x.x') }}
    test:
      commands:
        {% for gyp_lib in gyp_libs %}
        - test -f ${PREFIX}/lib/libgz-sim-yarp-{{ gyp_lib }}${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_BIN%\\gz-sim-yarp-{{ gyp_lib }}.dll exit 1  # [win]
        {% endfor %}

about:
  home: https://github.com/robotology/gz-sim-yarp-plugins
  license: BSD-3-Clause
  license_file: LICENSE
  summary: 'YARP plugins for Modern Gazebo (gz-sim).'

extra:
  feedstock-name: gz-sim-yarp-plugins
  recipe-maintainers:
    - xela-95
    - traversaro
